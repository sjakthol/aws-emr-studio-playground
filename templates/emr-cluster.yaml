AWSTemplateFormatVersion: 2010-09-09
Description: Amazon EMR Studio - Sample Cluster

Parameters:
  DeploymentName:
    Type: String
    # Default: DEPLOYMENT_DEFAULT

  # EMR Studio provides this value no matter what. We ignore it
  SubnetId:
    Type: String
    Default: ignore

  ClusterName:
    Type: String
    Default: default

  ClusterCapacityUnits:
    Type: Number
    Description: Amount of compute capacity to provision to the cluster. 1 capacity unit = 4 vCPU and 8-32 GB of memory
    Default: 2

  ReleaseLabel:
    Description: EMR release to use
    Type: String
    Default: emr-6.4.0 # emr-5.33.1

Conditions:
  IsEmr6: !Equals [!Select [0, !Split ['.', !Select [1, !Split ['-', !Ref ReleaseLabel]]]], '6']

Resources:
  EMRCluster:
    Type: AWS::EMR::Cluster
    Properties:
      Applications:
        - { Name: Spark }
        - { Name: Zeppelin }
        - { Name: JupyterEnterpriseGateway }
        - { Name: Livy }
      Configurations:
        - Fn::If:
            - IsEmr6
            - Classification: "container-executor"
              Configurations:
                - Classification: docker
                  ConfigurationProperties:
                    docker.trusted.registries: !Sub "local,centos,${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com"
                    docker.privileged-containers.registries: !Sub "local,centos,${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com"
            - !Ref AWS::NoValue
        - Classification: "zeppelin-env"
          Configurations:
            - Classification: "export"
              ConfigurationProperties:
                ZEPPELIN_NOTEBOOK_STORAGE: org.apache.zeppelin.notebook.repo.S3NotebookRepo
                ZEPPELIN_NOTEBOOK_S3_BUCKET:
                  Fn::ImportValue: !Sub ${DeploymentName}-infra-emr-NotebookBucket
                ZEPPELIN_NOTEBOOK_S3_USER: zeppelin
      Instances:
        CoreInstanceFleet:
          InstanceTypeConfigs:
            - { InstanceType: m5.2xlarge }
            - { InstanceType: c5.2xlarge }
            - { InstanceType: r5.2xlarge }
          Name: Core
          TargetOnDemandCapacity: 0
          TargetSpotCapacity: !Ref ClusterCapacityUnits
        Ec2SubnetId: !ImportValue infra-vpc-sn-public-a
        EmrManagedMasterSecurityGroup:
          Fn::ImportValue: !Sub ${DeploymentName}-infra-emr-MasterSecurityGroup
        EmrManagedSlaveSecurityGroup:
          Fn::ImportValue: !Sub ${DeploymentName}-infra-emr-WorkerSecurityGroup
        MasterInstanceFleet:
          InstanceTypeConfigs:
            - { InstanceType: m5.2xlarge }
            - { InstanceType: c5.2xlarge }
            - { InstanceType: r5.2xlarge }
          Name: Driver
          TargetOnDemandCapacity: 0
          TargetSpotCapacity: 1
        # ServiceAccessSecurityGroup:
        #   Fn::ImportValue: !Sub ${DeploymentName}-infra-emr-ServiceAccessSecurityGroup
      JobFlowRole:
        Fn::ImportValue: !Sub ${DeploymentName}-infra-emr-EmrInstanceRoleProfile
      LogUri:
        Fn::Sub:
          - "s3://${Bucket}/${DeploymentName}/emr/"
          - { Bucket: !ImportValue "infra-buckets-LogBucket" }
      Name: !Sub "${DeploymentName}-emr-cluster-${ClusterName}"
      ReleaseLabel: !Ref ReleaseLabel
      ServiceRole:
        Fn::ImportValue: !Sub ${DeploymentName}-infra-emr-EmrServiceRole
      Tags:
        - { Key: Name, Value: !Sub "${DeploymentName}-emr-cluster-${ClusterName}" }
      VisibleToAllUsers: true
