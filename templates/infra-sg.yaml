AWSTemplateFormatVersion: 2010-09-09
Description: Amazon EMR Studio - Security Groups

Parameters:
  Deployment:
    Type: String

Resources:
  MasterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-master-sg
      GroupDescription: !Sub EMR master node security group for ${Deployment} clusters
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-master-sg' }
      VpcId: !ImportValue infra-vpc-VpcId

  WorkerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-worker-sg
      GroupDescription: !Sub EMR worker node security group for ${Deployment} clusters
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-worker-sg' }
      VpcId: !ImportValue infra-vpc-VpcId

  ServiceAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-service-sg
      GroupDescription: !Sub EMR service access security group for ${Deployment} clusters
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-service-sg' }
      VpcId: !ImportValue infra-vpc-VpcId

  # From https://github.com/aws-samples/emr-studio-samples/blob/82c74e421602fff188fa8644406393f4b615ebf2/full_studio_dependencies.yml#L322

  WorkspaceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-WorkspaceSecurityGroup
      GroupDescription: Security group attached to EMR Studio workspace to communicate with cluster
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-WorkspaceSecurityGroup' }
      VpcId: !ImportValue infra-vpc-VpcId

  EngineSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group attached to cluster master to communicate with workspace
      GroupName: !Sub ${AWS::StackName}-EngineSecurityGroup
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-EngineSecurityGroup' }
      VpcId: !ImportValue infra-vpc-VpcId

  EngineSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound traffic to EngineSecurityGroup ( from notebook to cluster for port 18888 )
      GroupId:
        Ref: EngineSecurityGroup
      SourceSecurityGroupId:
        Ref: WorkspaceSecurityGroup
      IpProtocol: tcp
      FromPort: 18888
      ToPort: 18888

  WorkspaceSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound traffic from WorkspaceSecurityGroup ( from notebook to cluster for port 18888 )
      GroupId:
        Ref: WorkspaceSecurityGroup
      DestinationSecurityGroupId:
        Ref: EngineSecurityGroup
      IpProtocol: tcp
      FromPort: 18888
      ToPort: 18888

Outputs:
  MasterSecurityGroup:
    Description: EMR Managed Security Group for Master Nodes
    Value: !GetAtt MasterSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-MasterSecurityGroup'

  WorkerSecurityGroup:
    Description: EMR Managed Security Group for Worker Nodes
    Value: !GetAtt WorkerSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-WorkerSecurityGroup'

  ServiceAccessSecurityGroup:
    Description: EMR Managed Security Group for Service Access
    Value: !GetAtt ServiceAccessSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-ServiceAccessSecurityGroup'

  EngineSecurityGroup:
    Description: EMR Studio Security Group for EMR Cluster Master Nodes
    Value: !GetAtt EngineSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-EngineSecurityGroup'

  WorkspaceSecurityGroup:
    Description: EMR Studio Security Group for EMR Studio Workspace
    Value: !GetAtt WorkspaceSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-WorkspaceSecurityGroup'
